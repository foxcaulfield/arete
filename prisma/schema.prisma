// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["postgresqlExtensions"]
    //   output   = "../generated/prisma"
}

datasource db {
    provider   = "postgresql"
    url        = env("DATABASE_URL")
    extensions = [citext(), pgcrypto()]
}

enum UserRole {
    USER
    ADMIN
    MODERATOR

    @@map("user_role")
}

model User {
    id              String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    email           String         @unique @db.Citext
    passwordHash    String         @map("password_hash")
    role            UserRole       @default(USER)
    permissions     String[]       @default([])
    isActive        Boolean        @default(true) @map("is_active")
    isEmailVerified Boolean        @default(false) @map("is_email_verified")
    lastLogin       DateTime?      @map("last_login_at")
    createdAt       DateTime       @default(now()) @map("created_at")
    updatedAt       DateTime       @updatedAt @map("updated_at")
    tokenVersion    Int            @default(0) @map("token_version")
    RefreshToken    RefreshToken[]

    @@index([role], name: "user_role_idx")
    @@index([createdAt], name: "user_created_at_idx")
    @@index([isActive], name: "user_is_active_idx")
    @@index([tokenVersion], name: "user_token_version_idx")
    @@map("users")
}

model RefreshToken {
    id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    userId    String   @db.Uuid
    user      User     @relation(fields: [userId], references: [id])
    tokenHash String   @map("token_hash")
    revoked   Boolean  @default(false)
    expiresAt DateTime @map("expires_at")
    createdAt DateTime @default(now()) @map("created_at")

    @@index([userId])
    @@index([expiresAt])
    @@map("refresh_tokens")
}
